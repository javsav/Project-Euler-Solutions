### Problem 2

#### <i>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</i> 


def sum_of_even_values (array):
    new_array = []
    for item in array:
        if item % 2 == 0:
            new_array.append(item)
    print new_array
    sum_values = sum(new_array)
    return sum_values

fib_nums = [1,2]

i = 0

while max(fib_nums) < 4000000:
    a = fib_nums[i] #assign a as the ith index of fib_nums
    b = fib_nums[i + 1] #assign b as the ith + 1 index of fib_nums
    new_num = a + b
    fib_nums.append(new_num)

    i += 1

r = fib_nums[:-1]
print sum_of_even_values(r)


##### Answer: 4613732